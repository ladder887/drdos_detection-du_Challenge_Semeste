# -*- coding: utf-8 -*-
"""Test_2023DRDoS_RNN.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1wr9_lMc1bIzykmPzMYqHdCneY3LpSGpJ

# LOAD DATA
"""

# Commented out IPython magic to ensure Python compatibility.
# import relevant modules
# %matplotlib inline
import matplotlib
import matplotlib.pyplot as plt
import pandas as pd
import numpy as np
#import seaborn as sns
import sklearn
#import imblearn
from sklearn.neighbors import LocalOutlierFactor
import tensorflow as tf

# Ignore warnings
import warnings
warnings.filterwarnings('ignore')

plt.rcParams['axes.labelsize'] = 14
plt.rcParams['xtick.labelsize'] = 12
plt.rcParams['ytick.labelsize'] = 12

test = pd.read_csv('192_168_0_12_total.csv')
test = test.drop(['timestamp'], axis=1)
test = test.drop(['Label'], axis=1)
test.head()



"""# SCALING NUMERICAL ATTRIBUTES"""

#from sklearn.preprocessing import StandardScaler
#scaler = StandardScaler() # 가장 정확성이 높은 범위설정가능, ex) (0,1) 또는 (0, 10) 또는 (0,100) 또는 (0,1000) 등

from sklearn.preprocessing import MinMaxScaler # 각 열의 최소값, 최대값을 기준으로 리스케일 ex) 최소값을 0, 최대값을 1로 하여 수치조정
scaler = MinMaxScaler(feature_range=(0, 10)) # 가장 정확성이 높은 범위설정가능, ex) (0,1) 또는 (0, 10) 또는 (0,100) 또는 (0,1000) 등

# extract numerical attributes and scale it to have zero mean and unit variance
cols = test.select_dtypes(include=['float64','int64']).columns
sc_test = scaler.fit_transform(test.select_dtypes(include=['float64','int64']))

# turn the result back to a dataframe
testX = pd.DataFrame(sc_test, columns = cols)

testX.head()

"""# ENCODING CATEGORICAL ATTRIBUTES

# Load My Model
"""

from tensorflow import keras

# 선택!!
#model = keras.models.load_model('RNN_binary_model.h5')
model = keras.models.load_model('192_168_0_12_RNN.h5')

from sklearn.metrics import classification_report, confusion_matrix

Y_pred = model.predict(testX)
#print(Y_pred)
y_pred = np.argmax(Y_pred, axis=1)
#print(y_pred)

y_pred = model.predict(testX)

predict_classes=np.argmax(y_pred,axis=1)

print(predict_classes)